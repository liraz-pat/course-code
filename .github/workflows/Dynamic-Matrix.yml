name: Dynamic-Matrix.yml
on:
  workflow_dispatch:
    inputs:
      os:
        description: An os required
        type: string
        default: "windows-latest,ubuntu-latest"
      node-version:
        description: Node version
        type: string
        default: "14,15,16"

jobs:
  prepare-metrix:
    runs-on: ubuntu-latest
    outputs:
      os:   ${{ steps.build.outputs.OS}}
      node: ${{ steps.build.outputs.NODE }}
    steps:
      - id: build
        shell: bash
        run: |
               echo "OS=${{inputs.os}}" >> "$GITHUB_OUTPUT" 
               echo "NODE=${{inputs.node-version}}" >> "$GITHUB_OUTPUT"
     

  # Turn "a,b,c" into ["a","b","c"]
          OS_JSON=$(printf '%s' "$OS"   | jq -R 'split(",") | map(gsub("^\\s+|\\s+$";"")) | map(select(. != ""))')
          NODE_JSON=$(printf '%s' "$NODE"| jq -R 'split(",") | map(gsub("^\\s+|\\s+$";"")) | map(select(. != ""))')

          echo "os=$OS_JSON"     >> "$GITHUB_OUTPUT"
          echo "node=$NODE_JSON" >> "$GITHUB_OUTPUT"

      # optional debug
      - run: |
          echo "OS JSON:   ${{ steps.build.outputs.OS }}"
          echo "NODE JSON: ${{ steps.build.outputs.NODE }}"

  node-matrix:
    needs: prepare-metrix
    strategy:
      matrix:
        # IMPORTANT: no quotes hereâ€”matrix expects arrays/objects, not strings
        os:           ${{ fromJSON(needs.prepare-metrix.outputs.os) }}
        node-version: ${{ fromJSON(needs.prepare-metrix.outputs.node) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix['node-version'] }}
      - run: node -v
      - run: echo '${{ toJSON(matrix) }}'
